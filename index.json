{
  "api/CNPJValidatorV2.Core.CNPJLengthException.html": {
    "href": "api/CNPJValidatorV2.Core.CNPJLengthException.html",
    "title": "Class CNPJLengthException | CNPJValidatorV2",
    "summary": "Class CNPJLengthException Namespace CNPJValidatorV2.Core Assembly CNPJValidatorV2.Core.dll Exceção lançada quando o CNPJ possui um tamanho inválido. public class CNPJLengthException : Exception, ISerializable Inheritance object Exception CNPJLengthException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CNPJLengthException() Inicializa uma nova instância de CNPJLengthException. public CNPJLengthException()"
  },
  "api/CNPJValidatorV2.Core.CnpjValidator.html": {
    "href": "api/CNPJValidatorV2.Core.CnpjValidator.html",
    "title": "Class CnpjValidator | CNPJValidatorV2",
    "summary": "Class CnpjValidator Namespace CNPJValidatorV2.Core Assembly CNPJValidatorV2.Core.dll Fornece métodos utilitários para sanitização, validação, cálculo de dígitos verificadores e formatação de números de CNPJ (Cadastro Nacional da Pessoa Jurídica), com ou sem formatação. Suporta CNPJs alfanuméricos contendo letras maiúsculas e dígitos, conforme regras da Receita Federal. public static class CnpjValidator Inheritance object CnpjValidator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CalculateDv(string) Calcula e retorna os dois dígitos verificadores de um CNPJ com base nos seus 12 primeiros caracteres alfanuméricos. public static string CalculateDv(string input) Parameters input string Os 12 primeiros caracteres de um CNPJ alfanumérico (com ou sem formatação), contendo apenas letras maiúsculas e dígitos. Returns string O CNPJ completo (14 caracteres), sem formatação, com os dígitos verificadores calculados. Exceptions CNPJLengthException Lançada se o CNPJ não tiver exatamente 12 caracteres válidos após a sanitização. FormatCnpj(string) Formata um CNPJ alfanumérico no padrão \"00.000.000/0000-00\", assumindo que ele tenha 14 caracteres válidos. public static string FormatCnpj(this string input) Parameters input string CNPJ com ou sem formatação, contendo letras maiúsculas e/ou dígitos. Returns string O CNPJ formatado ou, se inválido, o valor original. IsValid(string) Verifica se um CNPJ alfanumérico (com ou sem formatação) é válido, incluindo os dígitos verificadores. public static bool IsValid(string input) Parameters input string CNPJ alfanumérico (com ou sem formatação), contendo apenas letras maiúsculas e dígitos. Returns bool true se o CNPJ for válido (incluindo os dígitos verificadores); caso contrário, false. SanitizeCnpj(string) Remove todos os caracteres inválidos de um CNPJ, mantendo apenas letras maiúsculas (A–Z) e dígitos (0–9). public static string SanitizeCnpj(this string input) Parameters input string CNPJ com ou sem formatação. Returns string CNPJ sanitizado contendo apenas letras maiúsculas e dígitos."
  },
  "api/CNPJValidatorV2.Core.html": {
    "href": "api/CNPJValidatorV2.Core.html",
    "title": "Namespace CNPJValidatorV2.Core | CNPJValidatorV2",
    "summary": "Namespace CNPJValidatorV2.Core Classes CNPJLengthException Exceção lançada quando o CNPJ possui um tamanho inválido. CnpjValidator Fornece métodos utilitários para sanitização, validação, cálculo de dígitos verificadores e formatação de números de CNPJ (Cadastro Nacional da Pessoa Jurídica), com ou sem formatação. Suporta CNPJs alfanuméricos contendo letras maiúsculas e dígitos, conforme regras da Receita Federal."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Primeiros Passos | CNPJValidatorV2",
    "summary": "Primeiros Passos CNPJValidatorV2 Uma biblioteca C# moderna e extensível para validação, formatação e cálculo de dígitos verificadores de CNPJs — agora com suporte a CNPJs alfanuméricos, de acordo com as diretrizes previstas pela Receita Federal do Brasil. ✨ Funcionalidades ✅ Validação de CNPJs com ou sem formatação \uD83D\uDD24 Suporte a CNPJs alfanuméricos (letras maiúsculas e dígitos) \uD83E\uDDEE Cálculo preciso dos dígitos verificadores (DV), baseado no algoritmo oficial \uD83E\uDDFC Sanitização de entrada (remove caracteres inválidos) \uD83E\uDDFE Formatação no padrão 00.000.000/0000-00 \uD83D\uDCD0 Algoritmo de cálculo (Receita Federal) O cálculo dos dígitos verificadores segue o manual técnico da Receita Federal: O CNPJ (agora alfanumérico) possui 12 caracteres iniciais e 2 dígitos verificadores numéricos. Cada caractere é convertido para um valor numérico, subtraindo 48 do valor ASCII. A sequência é processada da direita para a esquerda, multiplicando-se cada valor por pesos de 2 a 9, de forma cíclica. Soma-se os produtos e aplica-se o módulo 11: Se o resto for menor que 2, o DV é 0 Caso contrário, o DV é 11 - resto Referência: Manual de Especificações Técnicas do CNPJ – Receita Federal do Brasil \uD83D\uDE80 Instalação Via NuGet: dotnet add package CNPJValidatorV2 \uD83D\uDD0D Exemplo de uso using CNPJValidatorV2.Core; // Verifica se um CNPJ é válido bool valido1 = CnpjValidator.IsValid(\"12.345.678/0001-95\"); // true bool valido2 = CnpjValidator.IsValid(\"12.ABC.345/01DE-35\"); // true bool valido3 = CnpjValidator.IsValid(\"12.aBC.345/01DE-35\"); // false — apenas letras maiúsculas são aceitas // Sanitiza um CNPJ string cnpj = \"12.345.678/0001-95\".SanitizeCnpj(); // \"12345678000195\" // Formata um CNPJ simples string formatado = \"12345678000195\".FormatCnpj(); // \"12.345.678/0001-95\" // Calcula o DV a partir de um número base (alfanumérico) string cnpjComDV = CnpjValidator.CalculateDv(\"12ABC34501DE\"); // \"12ABC34501DE35\" // Calcula e já formata string formatadoComDV = CnpjValidator.CalculateDv(\"12ABC34501DE\").FormatCnpj(); // \"12.ABC.345/01DE-35\" ✅ Testes automatizados Este projeto possui testes com xUnit que cobrem: Validação de CNPJs numéricos e alfanuméricos Cálculo exato dos dígitos verificadores Detecção de formatos inválidos Testes de formatação e sanitização Casos especiais com letras e números mistos Execute os testes com: dotnet test ⚠️ Erros tratados O método CalculateDv lança exceção se o CNPJ sanitizado não tiver exatamente 12 caracteres válidos: Assert.Throws<ArgumentException>(() => CNPJValidator.CalculateDv(\"123\")); \uD83E\uDDFE Compatibilidade futura Esta biblioteca está pronta para suportar mudanças legais futuras, como a adoção oficial de CNPJs alfanuméricos. O algoritmo foi desenvolvido com base na documentação técnica da Receita Federal, já considerando essas adaptações. \uD83D\uDCC4 Licença Este projeto está licenciado sob a licença MIT. © 2025 Tiago Ávila Saldanha"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introdução | CNPJValidatorV2",
    "summary": "Introdução CNPJValidatorV2 é uma biblioteca C# moderna e extensível para validação, formatação e cálculo de dígitos verificadores de CNPJs, com suporte a CNPJs alfanuméricos, conforme as diretrizes da Receita Federal do Brasil. Principais recursos Validação de CNPJs numéricos e alfanuméricos Cálculo exato dos dígitos verificadores (DV) Sanitização e formatação automáticas Suporte completo a letras maiúsculas (A–Z) e dígitos (0–9) Para começar, acesse a seção Primeiros Passos."
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | CNPJValidatorV2",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}